{
  "name": "aegis-host",
  "version": "1.1.8",
  "description": "Federated Application Host",
  "installConfig": {
    "pnp": false
  },
  "main": "dist/main.js",
  "config": {
    "s3BucketName": "aegisserverless2",
    "region": "us-east-1",
    "cloudFormationStackName": "ServerlessExpressHttpApiStack",
    "functionName": "",
    "domain": ""
  },
  "repository": {
    "url": "https://github.com/module-federation/aegis-host"
  },
  "scripts": {
    "transpile": "babel src/worker.js -d dist",
    "prebuild": "yarn clean && yarn transpile",
    "build": "yarn prebuild && webpack --config webpack.config.js",
    "start": "node --trace-warnings --title aegis dist/main.js",
    "stop": "PID=$(lsof -P -i | grep LISTEN | awk '{print $2}'); kill $PID",
    "restart": "yarn build && yarn start",
    "login-status": "echo \"/workspace/aegis-host/status.sh\" >> ~/.aegis && echo \". ~/.aegis\"",
    "cmd-log": "echo \"alias log='view ~/aegis-host/public/aegis.log'\" >> ~/.aegis",
    "cmd-tail": "echo \"alias tail='tail -f ~/aegis-host/public/aegis.log'\" >> ~/.aegis",
    "cmd-start": "echo \"alias start='/workspace/aegis-host/start.sh'\" >> ~/.aegis",
    "cmd-status": "echo \"alias status='~/aegis-host/status.sh'\" >> ~/.aegis",
    "cmd-stop": "echo \"alias stop='/workspace/aegis-host/stop.sh'\" >> ~/.aegis",
    "cmd-env": "cp /workspace/aegis-host/dotenv.example ~/aegis-host/.env",
    "cmd-backupcfg": "cp /workspace/aegis-host/public/aegis.config.json ~",
    "cmd-restorecfg": "cp /workspace/aegis.config.json /workspace/aegis-host/public",
    "cmd-backupremote": "cp ~/aegis-host/webpack/remote-entries/index.js ~",
    "cmd-restoreremote": "cp ~/index.js ~/aegis-host/webpack/remote-entries",
    "cmd-backup": "echo \"alias backup='yarn cmd-backupcfg && yarn cmd-backupremote'\" >> ~/.aegis",
    "cmd-restore": "echo \"alias restore='yarn cmd-restorecfg && yarn cmd-restoreremote'\" >> ~/.aegis",
    "stats": "git ls-files | xargs wc -l",
    "deploy-lambda": "yarn clean npm run transpile && webpack --config webpack.config.js --env serverless && serverless package && serverless deploy",
    "mesh-start": "node --title appmesh ./node_modules/@module-federation/aegis/lib/services/mesh-switch.js",
    "mesh-status": "node ./node_modules/@module-federation/aegis/lib/services/webswitch-status.mjs",
    "dev-start": "nodemon --watch src --exec npm restart",
    "clean": "rimraf dist",
    "test-mocha": "mocha --recursive -r esm",
    "test": "jest",
    "demo": "open http://localhost",
    "demo-customer": "open http://localhost:8071",
    "demo-ssl": "open https://localhost:443",
    "demo-aws": "open https://aegis.module-federation.org",
    "refresh-token": "./accessToken.sh",
    "hot-reload-reset": "curl http://localhost/Aegis/reload-reset",
    "serverless-deploy": "serverless deploy",
    "serverless-invoke-local-api-post": "serverless invoke local --function aegis --path ./test/lambda/apigateway-post.json",
    "serverless-invoke-local-api-getid": "serverless invoke local --function aegis --path ./test/lambda/apigateway-getid.json",
    "serverless-invoke-local-html": "serverless invoke local --function html --path ./test/lambda/lambda-html.json",
    "call-aegis-on-lambda": "aws lambda invoke --function arn:aws:lambda:us-east-1:758072746799:function:aegis-dev-aegis --payload file://test/lambda/lambda-post.json lambda.out --cmd-binary-format raw-in-base64-out && cat lambda.out",
    "create-bucket": "cross-var aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "cross-var aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "aws-package": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_s3BucketName --output-template sam-template.packaged.yaml --region $npm_package_config_region",
    "aws-deploy": "cross-var aws cloudformation deploy --template-file sam-template.packaged.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region --parameter-overrides DomainName=$npm_package_config_domain",
    "aws-package-deploy": "npm run build && npm run package && npm run deploy",
    "aws-delete-stack": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "aws-setup": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy"
  },
  "author": "Tyson Midboe",
  "license": "Apache-2.0",
  "dependencies": {
    "/node_modules/@module-federation/aegis": "^0.0.0",
    "@octokit/core": "^3.4.0",
    "@octokit/rest": "^18.5.2",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "import-fresh": "^3.3.0",
    "log-timestamp": "^0.3.0",
    "nanoid": "^3.1.20",
    "regenerator-runtime": "^0.13.7",
    "ws": "^8.2.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.14.2",
    "@babel/node": "^7.10.5",
    "@babel/preset-env": "^7.11.0",
    "@types/node": "^14.17.32",
    "babel-loader": "^8.1.0",
    "babel-preset-env": "^1.7.0",
    "chalk": "^2.4.2",
    "core-js": "^3.6.5",
    "cross-var": "^1.1.0",
    "esm": "^3.2.25",
    "express-cli": "0.0.1",
    "jest": "^27.0.6",
    "mocha": "^8.2.0",
    "rimraf": "^3.0.2",
    "split": "^1.0.1",
    "webpack": "^5.4.0",
    "webpack-cli": "^4.7.0",
    "webpack-node-externals": "^3.0.0"
  }
}
